# Generated by Django 4.2.14 on 2024-08-27 11:04

import BoltMan.models.boltrequirements
import BoltMan.models.spatialposition
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ConceptMan', '0002_alter_concept_project_model'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bolt_Case',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('name', models.CharField(default='DUMMY_BOLT_CASE', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('picture', models.CharField(default='EMPTY', max_length=1000)),
                ('bolt_case_class', models.CharField(choices=[('Bolted Joint', 'Bolted Joint'), ('Tapped Thread Joint', 'Tapped Thread Joint')], default='Tapped Thread Joint', max_length=32)),
                ('lappedarea_bolthead', models.FloatField(blank=True, default=None, null=True, verbose_name='Lapped area (mm^2)')),
                ('lappedarea_nut', models.FloatField(blank=True, default=None, null=True, verbose_name='Lapped area (mm^2)')),
                ('nojs', models.PositiveIntegerField(blank=True, default=1, null=True, verbose_name='Number of joint separations (-)')),
                ('holediameter_part1', models.FloatField(blank=True, null=True, verbose_name='Hole diameter (mm)')),
                ('holediameter_part2', models.FloatField(blank=True, null=True, verbose_name='Hole diameter (mm)')),
                ('holediameter_part3', models.FloatField(blank=True, null=True, verbose_name='Hole diameter (mm)')),
                ('jointdiameter', models.FloatField(blank=True, null=True, verbose_name='Joint diameter (mm)')),
                ('nop', models.IntegerField(blank=True, default=None, editable=False, null=True, verbose_name='Number of Clamped parts')),
                ('sem', models.BooleanField(default=False)),
                ('d_w', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='Head Diameter')),
                ('A_n', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='Bolt - Nominal cross-section (mm^2)')),
                ('A_3', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='Bolt - Core cross-section (mm^2)')),
                ('delta_S', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='Bolt - Longintudinal elasticity (-)')),
                ('w', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='Connection - Coefficient')),
                ('tan_phi', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='Connection - Deformation Cone')),
                ('D_A', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='Connection - outside diameter of the interface')),
                ('D_A_prime', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='Connection - substitutional outside diameter of the interface')),
                ('Gr', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='Connection - Limiting Diameter')),
                ('d_H', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='Connection - Largest Hole Diameter')),
                ('delta_p_1', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='Connection - resilience of part 1')),
                ('delta_p_2', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='Connection - resilience of part 2')),
                ('delta_p_3', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='Connection - resilience of part 3')),
                ('delta_p_substituted', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='Connection - resilience substituted')),
                ('delta_p_total', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='Connection - resilience total')),
                ('l_K', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='Connection - clamping length')),
                ('l_H_1', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='length of the deformation sleeve')),
                ('l_V_1_a', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='length of the deformation cone part 1')),
                ('l_V_1_b', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='length of the deformation cone part 2')),
                ('d_W_1_a', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='bearing area diameter part 1')),
                ('d_W_1_b', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='bearing area diameter part 2')),
                ('delta_p_V_1_a', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='????')),
                ('delta_p_V_1_b', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='????')),
                ('delta_p_H_1', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='????')),
                ('load_factor', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='Load Factor')),
                ('roughness', models.CharField(choices=[('RL', '<10um'), ('RM', '10μm to 40μm'), ('RH', '40μm to 160μm')], default='RH', max_length=32)),
                ('tightening_method', models.CharField(choices=[('Elongation Meausurements', 'Elongation Meausurements'), ('Torque plus angle monitoring', 'Torque plus angle monitoring'), ('Calibrated Torque Wrench', 'Calibrated Torque Wrench'), ('Straight Torque Tightening', 'Straight Torque Tightening')], default='Calibrated Torque Wrench', max_length=32)),
                ('maturity', models.CharField(choices=[('Draft', 'Initial investigation'), ('Testing', 'Released for testing'), ('Release', 'Released for production')], default='Draft', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Bolt_Material',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('name', models.CharField(blank=True, default='Not defined', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('poisonsratio', models.FloatField(default=0, verbose_name='Poisons Ratio')),
                ('moeit', models.FloatField(default=0, verbose_name='Modulus of elasticity in tension')),
                ('hec', models.FloatField(default=0, verbose_name='Heat expansion coeficient')),
                ('density', models.FloatField(default=0, verbose_name='Density')),
                ('ys20', models.FloatField(default=0, verbose_name='Yield strength at 20°C(Mpa)')),
                ('ys100', models.FloatField(default=0, verbose_name='Yield strength at 100°C(Mpa)')),
                ('ys200', models.FloatField(default=0, verbose_name='Yield strength at 200°C(Mpa)')),
                ('ys250', models.FloatField(default=0, verbose_name='Yield strength at 250°C(Mpa)')),
                ('ys300', models.FloatField(default=0, verbose_name='Yield strength at 300°C(Mpa)')),
                ('uts', models.FloatField(default=0, verbose_name='Ultimate Tensile Strength, Su(Mpa)')),
                ('es', models.FloatField(default=0, verbose_name='Endurance Strength (Mpa)')),
                ('vh_min', models.FloatField(default=0, verbose_name='Minimum Vickers Hardness HV30')),
                ('vh_max', models.FloatField(default=0, verbose_name='Maximum Vickers Hardness HV30')),
                ('ss', models.FloatField(default=0, verbose_name='Shear Strength (MPa) [DIN EN ISO 898-1]')),
                ('materialgroup', models.CharField(choices=[('Steel', 'Steel'), ('Aluminium', 'Aluminium/Aluminium alloy'), ('Different', 'Different'), ('Plastic', 'Plastic')], default='Different', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Project_BoltMan_Ref',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='UUID')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectUser_BoltMan_Ref',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='UUID')),
                ('nickname', models.CharField(blank=True, default='Not defined', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle_BoltMan_Ref',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='UUID')),
            ],
        ),
        migrations.CreateModel(
            name='Washer',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('name', models.CharField(blank=True, default='Not defined', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('norm', models.CharField(blank=True, default='Not defined', max_length=15)),
                ('thickness', models.FloatField(verbose_name='Thickness (mm)')),
                ('odiameter', models.FloatField(verbose_name='Outside Diameter (mm)')),
                ('idiameter', models.FloatField(verbose_name='Inside Diameter (mm)')),
                ('washer_type', models.CharField(choices=[('Flat', 'Bolted Joint'), ('Fender', 'Fender'), ('Split Lock', 'Split Lock'), ('Internal Tooth Lock', 'Internal Tooth Lock'), ('External Tooth Lock', 'External Tooth Lock'), ('Finishing', 'Finishing'), ('Clipped', 'Clipped'), ('Spring', 'Spring'), ('Wave', 'Wave'), ('Square', 'Square'), ('Wedge Lock', 'Wedge Lock')], default='Flat', max_length=32)),
                ('material', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='BoltMan.bolt_material', verbose_name='Part material')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='BoltMan.projectuser_boltman_ref')),
            ],
        ),
        migrations.CreateModel(
            name='Spatial_Position',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('name', models.CharField(default=None, help_text='e.g. Klimaaggregat_Pos_1', max_length=100, verbose_name='Spatial Position Name')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('x', models.FloatField(default=0, verbose_name='X Coordinate [mm]:')),
                ('y', models.FloatField(default=0, verbose_name='Y Coordinate [mm]:')),
                ('z', models.FloatField(default=0, verbose_name='Z Coordinate [mm]:')),
                ('xn', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(-1), django.core.validators.MinValueValidator(1)], verbose_name='X orientation Vector []:')),
                ('yn', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(-1), django.core.validators.MinValueValidator(1)], verbose_name='Y orientation Vector []:')),
                ('zn', models.FloatField(default=1, validators=[django.core.validators.MaxValueValidator(-1), django.core.validators.MinValueValidator(1)], verbose_name='Z orientation Vector []:')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='BoltMan.projectuser_boltman_ref')),
            ],
        ),
        migrations.CreateModel(
            name='Part_Material',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('name', models.CharField(blank=True, default='Not defined', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('aisi', models.CharField(blank=True, default='Not defined', max_length=20, verbose_name='AISI')),
                ('din', models.CharField(blank=True, default='Not defined', max_length=20, verbose_name='DIN')),
                ('bs', models.CharField(blank=True, default='Not defined', max_length=20, verbose_name='BS')),
                ('af', models.CharField(blank=True, default='Not defined', max_length=20, verbose_name='AF')),
                ('uni', models.CharField(blank=True, default='Not defined', max_length=20, verbose_name='UNI')),
                ('une', models.CharField(blank=True, default='Not defined', max_length=20, verbose_name='UNE')),
                ('jis', models.CharField(blank=True, default='Not defined', max_length=20, verbose_name='JIS')),
                ('csn', models.CharField(blank=True, default='Not defined', max_length=20, verbose_name='CSN')),
                ('poisonsratio', models.FloatField(verbose_name='Poisons Ratio')),
                ('moeit', models.FloatField(verbose_name='Modulus of elasticity in tension')),
                ('hec', models.FloatField(verbose_name='Heat expansion coefficient (10^-6/°C)')),
                ('density', models.FloatField(verbose_name='Density (kg/m3)')),
                ('uts', models.FloatField(verbose_name='Ultimate Tensile Strength, Su(Mpa)')),
                ('ys', models.FloatField(verbose_name='Yield strength, Sy(Mpa)')),
                ('sh', models.FloatField(verbose_name='Shear strength (Mpa)')),
                ('ppubh', models.FloatField(verbose_name='Permitted pressure under bolt head (MPa)')),
                ('mpfpp', models.FloatField(verbose_name='Max. preload from permitted pressure (N)')),
                ('materialgroup', models.CharField(choices=[('Steel', 'Steel'), ('Aluminium', 'Aluminium/Aluminium alloy'), ('Castiron', 'Cast iron'), ('Different', 'Different'), ('Plastic', 'Plastic')], default='Different', max_length=32)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='BoltMan.projectuser_boltman_ref')),
            ],
        ),
        migrations.CreateModel(
            name='Metric_Thread',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('name', models.CharField(blank=True, default='Not defined', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nominaldiameter', models.PositiveIntegerField(verbose_name='Nominal Diameter (mm)')),
                ('pitchdiameter', models.FloatField(verbose_name='Pitch diameter (mm)')),
                ('tensilestressarea', models.FloatField(verbose_name='Tensile Stress Area (mm^2)')),
                ('minordiameter', models.FloatField(verbose_name='Minor Diameter (mm)')),
                ('flankangle', models.FloatField(verbose_name='Flank angle (°)')),
                ('pitch', models.FloatField(verbose_name='Pitch β (°)')),
                ('depth', models.FloatField(verbose_name='Depth (Total height of V Shape) (mm)')),
                ('depthh3', models.FloatField(verbose_name='Depth h3 (mm)')),
                ('nmaxmd', models.FloatField(verbose_name='Nut - Maximum Minor Diameter (mm)')),
                ('sminpd', models.FloatField(verbose_name='Screw - Minimum Pitch Diameter (mm)')),
                ('nmaxpd', models.FloatField(verbose_name='Nut - Maximum Pitch Diameter (mm)')),
                ('sminmd', models.FloatField(verbose_name='Screw - Minimum Major Diameter (mm)')),
                ('sapuls', models.FloatField(verbose_name='Shear Area per unit length - Screw (mm)')),
                ('sapuln', models.FloatField(verbose_name='Shear Area per unit length - Nut (mm)')),
                ('chd', models.FloatField(verbose_name='Clearance hole diameter (mm)')),
                ('nutheight', models.FloatField(verbose_name='Nut height (mm)')),
                ('helmaxpd', models.FloatField(verbose_name='Helicoil Max pitch diameter (mm)')),
                ('helmd', models.FloatField(verbose_name='Helicoil Major diameter (mm)')),
                ('helsapul', models.FloatField(verbose_name='Helicoil Shear Area per unit length (mm)')),
                ('washerheight', models.FloatField(verbose_name='Washer height (mm)')),
                ('keywidth', models.FloatField(verbose_name='Key-width (mm)')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='BoltMan.projectuser_boltman_ref')),
            ],
        ),
        migrations.CreateModel(
            name='Friction_Thread',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('name', models.CharField(blank=True, default='Not defined', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('f_class', models.CharField(choices=[('CLASS_A', 'Class A'), ('CLASS_B', 'Class B'), ('CLASS_C', 'Class C'), ('CLASS_D', 'Class D'), ('CLASS_E', 'Class E'), ('SC1', 'SC1'), ('SC2', 'SC2'), ('SC3', 'SC3'), ('SC4', 'SC4'), ('SC5', 'SC5'), ('SC6', 'SC6'), ('SC7', 'SC7'), ('SC8', 'SC8'), ('BC1', 'BC1'), ('BC2', 'BC2'), ('BC3', 'BC3'), ('BC4', 'BC4'), ('BC5', 'BC5'), ('NC', 'Not Classified')], default=None, max_length=100, verbose_name='Colour')),
                ('colour', models.CharField(default=None, max_length=100, verbose_name='Colour')),
                ('surface', models.CharField(default=None, max_length=100, verbose_name='Surface')),
                ('precision', models.CharField(choices=[('NP', 'Non-precision'), ('P', 'Precision')], default=('NP', 'Non-precision'), max_length=30, verbose_name='Precision')),
                ('lubrication', models.CharField(default=None, max_length=500, verbose_name='Lubrication')),
                ('friction_av', models.FloatField(default=None, verbose_name='Avarage friction')),
                ('friction_min', models.FloatField(default=None, verbose_name='Minimum friction')),
                ('friction_max', models.FloatField(default=None, verbose_name='Maximum friction')),
                ('source', models.CharField(default=None, max_length=100, verbose_name='Source')),
                ('notes', models.CharField(default=None, max_length=500, verbose_name='Notes')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='BoltMan.projectuser_boltman_ref')),
            ],
        ),
        migrations.CreateModel(
            name='Friction_Joint',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('name', models.CharField(blank=True, default='Not defined', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mat_1_name', models.CharField(default=None, max_length=30, verbose_name='Material 1')),
                ('mat_2_name', models.CharField(default=None, max_length=30, verbose_name='Material 2')),
                ('lubrication', models.CharField(default=None, max_length=100, verbose_name='Lubrication')),
                ('friction_av', models.FloatField(default=None, verbose_name='Avarage friction')),
                ('friction_min', models.FloatField(default=None, verbose_name='Minimum friction')),
                ('friction_max', models.FloatField(default=None, verbose_name='Maximum friction')),
                ('source', models.CharField(default=None, max_length=100, verbose_name='Source')),
                ('notes', models.CharField(default=None, max_length=500, verbose_name='Notes')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='BoltMan.projectuser_boltman_ref')),
            ],
        ),
        migrations.CreateModel(
            name='Friction_Head',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('name', models.CharField(blank=True, default='Not defined', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mat_1_name', models.CharField(default=None, max_length=100, verbose_name='Material 1')),
                ('mat_2_name', models.CharField(default=None, max_length=100, verbose_name='Material 2')),
                ('plating', models.CharField(default=None, max_length=100, verbose_name='Plating')),
                ('colour', models.CharField(default=None, max_length=100, verbose_name='Colour')),
                ('lubrication', models.CharField(default=None, max_length=500, verbose_name='Lubrication')),
                ('friction_av', models.FloatField(default=None, verbose_name='Avarage friction')),
                ('friction_min', models.FloatField(default=None, verbose_name='Minimum friction')),
                ('friction_max', models.FloatField(default=None, verbose_name='Maximum friction')),
                ('source', models.CharField(default=None, max_length=100, verbose_name='Source')),
                ('notes', models.CharField(default=None, max_length=500, verbose_name='Notes')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='BoltMan.projectuser_boltman_ref')),
            ],
        ),
        migrations.CreateModel(
            name='Bolt_Requirements',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('name', models.CharField(blank=True, default='Not defined', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meaf', models.FloatField(default=1, verbose_name='Maximum External Axial Force (N)')),
                ('mesf', models.FloatField(default=1, verbose_name='Maximum External Shear Force (N)')),
                ('maxtemp', models.IntegerField(default=70, verbose_name='Maximum Temperature (°C)')),
                ('mintemp', models.IntegerField(default=-40, verbose_name='Minimum Temperature (°C)')),
                ('elc', models.CharField(choices=[('CS', 'Concentric - Static'), ('ES', 'Eccentric - Static'), ('CD', 'Concentric - Dynamic'), ('ED', 'Eccentric - Dynamic'), ('TR', 'Transverse')], default='CS', max_length=32, verbose_name='External Loading Class')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='BoltMan.projectuser_boltman_ref')),
            ],
        ),
        migrations.AddField(
            model_name='bolt_material',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='BoltMan.projectuser_boltman_ref'),
        ),
        migrations.CreateModel(
            name='Bolt_Geometry',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('name', models.CharField(blank=True, default='Not defined', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('norm', models.CharField(blank=True, default='Not defined', max_length=15)),
                ('headdiameter', models.FloatField(verbose_name='Head dieamter:')),
                ('total_length', models.PositiveIntegerField(verbose_name='Total length:')),
                ('shank_length', models.PositiveIntegerField(verbose_name='Shank length:')),
                ('head_height', models.PositiveIntegerField(verbose_name='Head height:')),
                ('thread_size', models.PositiveIntegerField(verbose_name='Thread size:')),
                ('thread_metric', models.BooleanField(verbose_name='Thread is metric:')),
                ('thread_right_hand', models.BooleanField(verbose_name='Thread is right hand:')),
                ('picture', models.CharField(max_length=1000)),
                ('tsa', models.FloatField(verbose_name='Tensile Stress Area (mm^2)')),
                ('material', models.ForeignKey(default=None, help_text='Select a geometry', on_delete=django.db.models.deletion.CASCADE, to='BoltMan.bolt_material')),
                ('mthread', models.ForeignKey(blank=True, default=None, help_text='Metric Thread', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_metric_thread', to='BoltMan.metric_thread')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='BoltMan.projectuser_boltman_ref')),
            ],
        ),
        migrations.CreateModel(
            name='Bolt_Case_Instance',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('name', models.CharField(blank=True, default='DUMMY_BOLT_CASE_INSTANCE', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='uploads/', verbose_name='Assessment Image')),
                ('symmetric', models.BooleanField(default=False, verbose_name='Symmetric')),
                ('embedding', models.FloatField(blank=True, default=None, editable=False, null=True, verbose_name='Connection - Settling rate')),
                ('description', models.CharField(blank=True, default='DUMMY_BOLT_CASE_INSTANCE', max_length=1000)),
                ('status', models.CharField(choices=[('Draft', 'Initial investigation'), ('Testing', 'Released for testing'), ('Release', 'Released for production')], default='Draft', max_length=32)),
                ('boltcase', models.ForeignKey(default=None, help_text='Select a position', on_delete=django.db.models.deletion.CASCADE, to='BoltMan.bolt_case')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='BoltMan.projectuser_boltman_ref')),
                ('project_model', models.ForeignKey(blank=True, default=None, help_text='Select a a project for assessment', null=True, on_delete=django.db.models.deletion.CASCADE, to='BoltMan.project_boltman_ref', verbose_name='Project')),
                ('requirements', models.OneToOneField(default=BoltMan.models.boltrequirements.on_create_default_requirement, help_text='Requirements of the Instance', on_delete=django.db.models.deletion.CASCADE, to='BoltMan.bolt_requirements', verbose_name='Spatial_Position')),
                ('spatial_position', models.OneToOneField(default=BoltMan.models.spatialposition.on_create_default_position, help_text='Position Vectors of the Instance', on_delete=django.db.models.deletion.CASCADE, to='BoltMan.spatial_position', verbose_name='Spatial_Position')),
                ('vehicle', models.ManyToManyField(help_text='Select one or more vehicles for a Bolt Case Insance', to='BoltMan.vehicle_boltman_ref')),
            ],
        ),
        migrations.AddField(
            model_name='bolt_case',
            name='bolt_geometry',
            field=models.ForeignKey(blank=True, default=None, help_text='Select a geometry', null=True, on_delete=django.db.models.deletion.CASCADE, to='BoltMan.bolt_geometry'),
        ),
        migrations.AddField(
            model_name='bolt_case',
            name='friction_head',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='BoltMan.friction_head'),
        ),
        migrations.AddField(
            model_name='bolt_case',
            name='friction_joint',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='BoltMan.friction_joint'),
        ),
        migrations.AddField(
            model_name='bolt_case',
            name='friction_thread',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='BoltMan.friction_thread'),
        ),
        migrations.AddField(
            model_name='bolt_case',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='BoltMan.projectuser_boltman_ref'),
        ),
        migrations.AddField(
            model_name='bolt_case',
            name='part1',
            field=models.ForeignKey(blank=True, default=None, help_text='Select a part', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_part1', to='ConceptMan.part'),
        ),
        migrations.AddField(
            model_name='bolt_case',
            name='part2',
            field=models.ForeignKey(blank=True, default=None, help_text='Select a part', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_part2', to='ConceptMan.part'),
        ),
        migrations.AddField(
            model_name='bolt_case',
            name='part3',
            field=models.ForeignKey(blank=True, default=None, help_text='Select a part', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_part3', to='ConceptMan.part'),
        ),
        migrations.AddField(
            model_name='bolt_case',
            name='vehicle',
            field=models.ManyToManyField(help_text='Select car or cars for a Bolt Case', to='BoltMan.vehicle_boltman_ref'),
        ),
        migrations.AddField(
            model_name='bolt_case',
            name='washer_head',
            field=models.ForeignKey(blank=True, default=None, help_text='Washer head', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_washer_head', to='BoltMan.washer'),
        ),
        migrations.AddField(
            model_name='bolt_case',
            name='washer_nut',
            field=models.ForeignKey(blank=True, default=None, help_text='Washer nut', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_washer_nut', to='BoltMan.washer'),
        ),
    ]
