# Generated by Django 4.2.7 on 2023-11-21 12:39

import EcoMan.scripts.colors
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid
import website.generate_pk


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('MatMan', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Manufacturing_Process',
            fields=[
                ('id', models.CharField(default=website.generate_pk.generate_pk, max_length=255, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, default='Not defined', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project_ConceptMan_Ref',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='UUID')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectUser_ConceptMan_Ref',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='UUID')),
                ('nickname', models.CharField(blank=True, default='Not defined', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle_ConceptMan_Ref',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='UUID')),
            ],
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.CharField(default=website.generate_pk.generate_pk, max_length=255, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, default='Not defined', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('diagram_color', models.CharField(default=EcoMan.scripts.colors.get_random_color, max_length=7)),
                ('weight_calculation', models.CharField(choices=[('WE1', 'Area and thickness: Weight = Area * thickness * Material_density'), ('WE2', 'Volume: Weight = Volume * Material_density'), ('WE3', 'Weight: Weight = Input_weight')], default='WE3', max_length=32)),
                ('thickness', models.FloatField(blank=True, null=True, verbose_name='Thickness (m)')),
                ('volume', models.FloatField(blank=True, null=True, verbose_name='Volume (m3)')),
                ('weight', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Weight (kg)')),
                ('area', models.FloatField(blank=True, null=True, verbose_name='Area (m2)')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='uploads/', verbose_name='Part Image')),
                ('engineering_material', models.ForeignKey(blank=True, default=None, help_text='Select material', null=True, on_delete=django.db.models.deletion.CASCADE, to='MatMan.engineering_material')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConceptMan.projectuser_conceptman_ref')),
                ('process_model', models.ManyToManyField(blank=True, default=None, help_text='Select one or more processes', to='ConceptMan.manufacturing_process', verbose_name='Process')),
            ],
        ),
        migrations.AddField(
            model_name='manufacturing_process',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConceptMan.projectuser_conceptman_ref'),
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.CharField(default=website.generate_pk.generate_pk, max_length=255, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, default='No Name', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('logo', models.CharField(default='Default Concept Logo', max_length=1000)),
                ('weight', models.FloatField(blank=True, default=0, editable=False, verbose_name='Concept Weight [kg]')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConceptMan.projectuser_conceptman_ref')),
                ('parts', models.ManyToManyField(blank=True, default=None, help_text='Select one or more parts', to='ConceptMan.part', verbose_name='Part')),
                ('project_model', models.ForeignKey(blank=True, default=None, help_text='Select a a project for analysis', on_delete=django.db.models.deletion.CASCADE, to='ConceptMan.project_conceptman_ref', verbose_name='Project')),
                ('vehicles', models.ManyToManyField(blank=True, default=None, help_text='Select one or more vehicles', to='ConceptMan.vehicle_conceptman_ref', verbose_name='Vehicles')),
            ],
        ),
    ]
